name: actions-example

on:
  pull_request:
    types: [edited]
  # push:
    # branchs:
    #  - main
    #  -'!develop'
  # pull_request:
  #   types: [closed, opened, reopened]
  #schedule:
  #  -cron: "* * * * *"
jobs:
  run-github-actions:
    runs-on: ubuntu-latest
    steps:
      - name: paylod via postman pegando a env
        run: |
          DEPENDENCIES='echo python -c 'import sys, json;''
          echo ${{ github.event.client_payload.env}}
      - name: vari√°veis de ambiente do github
        run: |
          echo $GITHUB_ACTION_PATH
          echo $GITHUB_ACTOR
          echo $GITHUB_REPOSITORY
      - name: simples js action
        id: greet
        uses: actions/hello-world-javascript-action@v1
        with:
          who-to-greet: emily
      - name: logando
        run: echo "${{ steps.greet.outputs.time }}"
      - name: Dump GitHub context
        run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJSON(github.event.pull_request.body) }}
      - name: pacotes
        env:
          COMENTARIO: ${{ github.event.pull_request.body }}
        run: |
            readarray -t LINES <<< "$COMENTARIO"

            for LINE in "${LINES[@]}"; do  
                echo "LINE -> $LINE"

                if [[ "$LINE" =~ ^pacotes[[:space:]]*=(.*)$ ]]; then
                    readarray -d "," -t PACKAGES <<< ${BASH_REMATCH[1]}
                    for PACKAGE in "${PACKAGES[@]}"; do
                        PACKAGE_WITHOUT_SPACES=$(echo $PACKAGE | xargs)
                        echo "package = \"$PACKAGE_WITHOUT_SPACES\""
                    done;
                elif [[ "$LINE" =~ ^testes[[:space:]]*=(.*)$ ]]; then
                    CAPTURED_VALUE=${BASH_REMATCH[1]}
                    readarray -d "," -t TESTS <<< ${BASH_REMATCH[1]}
                    for TEST in "${TESTS[@]}"; do
                        TEST_WITHOUT_SPACES=$(echo $TEST | xargs)
                        echo "test = \"$TEST_WITHOUT_SPACES\""
                    done;
                fi
            done;
            


        